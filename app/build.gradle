plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("kotlin-parcelize")
    id("org.jetbrains.kotlin.kapt")
    id("com.google.dagger.hilt.android")
}

def propFile = rootProject.file("./local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(propFile))

android {

    compileSdk 34

    namespace = "com.recipeapp"

    defaultConfig {
        applicationId "com.recipeapp"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "RECIPE_APP_API_TOKEN", localProperties['RECIPE_APP_API_TOKEN'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.14"
    }
}

dependencies {

    //implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    implementation(libs.androidx.core.ktx)
    //implementation("androidx.core:core-ktx:1.7.0")

    implementation(libs.androidx.appcompat)
    //implementation("androidx.appcompat:appcompat:1.6.1")

    implementation(libs.google.material)
    //implementation("com.google.android.material:material:1.4.0")

    implementation(libs.androidx.constraintlayout)
    //implementation("androidx.constraintlayout:constraintlayout:2.1.1")

    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.ui.tooling)
    implementation(libs.androidx.compose.ui.tooling.preview)
    implementation(libs.androidx.compose.ui.graphics)
    //implementation("androidx.compose.ui:ui:$composeVersion")
    implementation(libs.androidx.compose.foundation)
    //implementation("androidx.compose.foundation:foundation:$composeVersion")
    implementation(libs.androidx.compose.runtime.livedata)
    //implementation("androidx.compose.runtime:runtime-livedata:$composeVersion")
    implementation(libs.androidx.compose.runtime.rxjava2)
    //implementation("androidx.compose.runtime:runtime-rxjava2:$composeVersion")

    implementation(libs.androidx.compose.material3)
    //implementation("androidx.compose.material:material:$composeVersion")
    implementation("androidx.compose.material:material-icons-core:$composeVersion")
    implementation("androidx.compose.material:material-icons-extended:$composeVersion")
    //implementation("androidx.compose.ui:ui-tooling:$composeVersion")

    implementation("androidx.constraintlayout:constraintlayout-compose:1.0.0-rc01")

    implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
    implementation("androidx.navigation:navigation-ui-ktx:2.3.5")

    implementation("androidx.navigation:navigation-compose:2.4.0-beta02")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0-alpha03")

    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation("com.squareup.retrofit2:retrofit:2.9.0")

    implementation("com.google.dagger:hilt-android:2.49")
    implementation("androidx.hilt:hilt-navigation-compose:1.2.0")
    kapt("com.google.dagger:hilt-android-compiler:2.49")
    kapt("androidx.hilt:hilt-compiler:1.2.0")

    implementation("com.github.bumptech.glide:glide:4.12.0")
    // Skip this if you don't want to use integration libraries or configure Glide.
    kapt("com.github.bumptech.glide:compiler:4.12.0")



    implementation("androidx.datastore:datastore-preferences:1.0.0")
    implementation("androidx.datastore:datastore-preferences-core:1.0.0")

    implementation("androidx.lifecycle:lifecycle-process:2.4.0")
    implementation("androidx.lifecycle:lifecycle-common-java8:2.4.0")
}